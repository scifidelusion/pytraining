class ItemVenda:
    def __init__(self, produto, quantidade, preco_unitario):
        self.produto = produto
        self.quantidade = quantidade
        self.preco_unitario = preco_unitario

    def calcular_total(self):
        return self.quantidade * self.preco_unitario

def ler_arquivo_vendas(nome_arquivo):
    itens_venda = []
    with open(nome_arquivo, 'r', encoding="utf-8") as arquivo:
        linhas = arquivo.readlines()[1:]  # Ignorar o cabeçalho
        for linha in linhas:
            dados = linha.strip().split(',')
            print(dados)
            produto = dados[0]
            quantidade = int(dados[1])
            preco_unitario = float(dados[2])
            item = ItemVenda(produto, quantidade, preco_unitario)
            itens_venda.append(item)
    return itens_venda


def calcular_total_vendas(itens_venda):
    total_vendas = 0
    for item in itens_venda:
        total_vendas += item.calcular_total()
    return total_vendas

nome_arquivo = 'vendas.txt'
itens_venda = ler_arquivo_vendas(nome_arquivo)
total_vendas = calcular_total_vendas(itens_venda)
print("Total de Vendas:", total_vendas)


class Funcionario:
    def __init__(self, nome, funcionario_id, cargo):
        self.nome = nome
        self.funcionario_id = funcionario_id
        self.cargo = cargo
        self.notas = []

    def adicionar_nota(self, nota):
        if 0 <= nota <= 10:
            self.notas.append(nota)
        else:
            print("A nota deve estar entre 0 e 10.")

    def calcular_media(self):
        if len(self.notas) >= 2:
            return sum(self.notas) / len(self.notas)
        else:
            print("É necessário ter pelo menos 2 notas para calcular a média.")

    def obter_avaliacao(self):
        media = self.calcular_media()
        if 0 <= media <= 4:
            return "Ruim"
        elif 5 <= media <= 8:
            return "Médio"
        elif 9 <= media <= 10:
            return "Bom"
        else:
            return "NOTA INVÁLIDO"


funcionario1 = Funcionario("Funcionario1", 1, "Analista")
funcionario2 = Funcionario("Funcionario2", 2, "Desenvolvedor")
funcionario3 = Funcionario("Funcionario3", 3, "Gerente")
funcionario4 = Funcionario("Funcionario4", 4, "Analista Sênior")


funcionario1.adicionar_nota(8)
funcionario1.adicionar_nota(7)
funcionario1.adicionar_nota(6)

funcionario2.adicionar_nota(9)
funcionario2.adicionar_nota(8)

funcionario3.adicionar_nota(5)
funcionario3.adicionar_nota(6)

funcionario4.adicionar_nota(10)
funcionario4.adicionar_nota(9)


funcionarios = [funcionario1, funcionario2, funcionario3, funcionario4]

melhor_media = None
pior_media = None
media_departamento = 0

for funcionario in funcionarios:
    avaliacao = funcionario.obter_avaliacao()
    media = funcionario.calcular_media()
    media_departamento += media

    print(f"\nID: {funcionario.funcionario_id}")
    print(f"Nome: {funcionario.nome}")
    print(f"Cargo: {funcionario.cargo}")
    print(f"Média: {media:.2f}")
    print(f"Avaliação: {avaliacao}")

    if melhor_media is None or media > melhor_media:
        melhor_media = media
        melhor_funcionario = funcionario

    if pior_media is None or media < pior_media:
        pior_media = media
        pior_funcionario = funcionario

media_departamento /= len(funcionarios)

print("\nMelhor média do departamento:")
print(f"ID: {melhor_funcionario.funcionario_id}")
print(f"Nome: {melhor_funcionario.nome}")
print(f"Cargo: {melhor_funcionario.cargo}")
print(f"Média: {melhor_media:.2f}")

print("\nPior média do departamento:")
print(f"ID: {pior_funcionario.funcionario_id}")
print(f"Nome: {pior_funcionario.nome}")
print(f"Cargo: {pior_funcionario.cargo}")
print(f"Média: {pior_media:.2f}")

print("\nMédia geral do departamento: {:.2f}".format(media_departamento))
















       
